{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/hero.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/hooks/use-posts.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/hooks/use-sitemetadata.js"],"names":["Layout","_ref3","children","_useSiteMetadata","useSiteMetadata","title","description","Object","core_browser_esm","react_default","a","Fragment","styles","_ref","Helmet_default","lang","name","content","css","_ref2","Fade_default","bottom","distance","TextBox","styled_base_browser_esm","target","Hero","className","href","__webpack_exports__","usePosts","layout","hero","loader","enqueue","React","createContext","m","module","exports","require","default","_public_static_d_1384569958_json__WEBPACK_IMPORTED_MODULE_0__","data","allMdx","nodes","map","post","frontmatter","tag","slug","image","excerpt","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","_objectSpread","json","NavLink","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","Link","Header","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","to","fontWeight","activeClassName","LinkBox","FooterLink","Footer","_public_static_d_3977732298_json__WEBPACK_IMPORTED_MODULE_0__","site","siteMetadata"],"mappings":"2uBAsGeA,EA7FA,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAAeC,EACAC,cAAvBC,EADuBF,EACvBE,MAAOC,EADgBH,EAChBG,YAEf,OACEC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,SAAA,KACEJ,OAAAC,EAAA,EAAAD,CAACC,EAAA,EAAD,CACEI,OAAMC,IAkERN,OAAAC,EAAA,EAAAD,CAACO,EAAAJ,EAAD,KACEH,OAAAC,EAAA,EAAAD,CAAA,QAAMQ,KAAK,OACXR,OAAAC,EAAA,EAAAD,CAAA,aAAQF,GACRE,OAAAC,EAAA,EAAAD,CAAA,QAAMS,KAAK,cAAcC,QAASX,KAEpCC,OAAAC,EAAA,EAAAD,CAAA,QACEW,IAAGC,GAOHZ,OAAAC,EAAA,EAAAD,CAACa,EAAAV,EAAD,CAAMW,QAAM,EAACC,SAAU,QACpBpB,eC1FLqB,EAAUhB,OAAAiB,EAAA,EAAAjB,CAAO,MAAP,CAAAkB,OAAA,aAAAlB,CAAH,CAAAS,KAAA,SAAAJ,OAAA,mnBAkFEc,EAVF,WACX,OACEnB,OAAAC,EAAA,EAAAD,CAACgB,EAAD,KACEhB,OAAAC,EAAA,EAAAD,CAAA,uBACAA,OAAAC,EAAA,EAAAD,CAAA,oCACAA,OAAAC,EAAA,EAAAD,CAAA,qCAA4BA,OAAAC,EAAA,EAAAD,CAAA,KAAGoB,UAAW,YAAaC,KAAK,wBAAhC,iCC1EnBC,EAAA,mBACCC,cAWd,OACEvB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,SAAA,KACEJ,OAAAC,EAAA,EAAAD,CAACwB,EAAD,KACExB,OAAAC,EAAA,EAAAD,CAACyB,EAAD,oICTiBC,QAAOC,QAELC,IAAMC,cAAc,yBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,iDCqChCP,IAnCE,WA0Bf,OAzBUY,EAAAC,KAyBEC,OAAOC,MAAMC,IAAI,SAAAC,GAAI,MAAK,CACpC1C,MAAO0C,EAAKC,YAAY3C,MACxB4C,IAAKF,EAAKC,YAAYC,IACtBC,KAAMH,EAAKC,YAAYE,KACvBC,MAAOJ,EAAKC,YAAYG,MACxBC,QAASL,EAAKK,ycCXHC,UAjBU,SAAAxC,GAAiC,IAA9ByC,EAA8BzC,EAA9ByC,SAAUC,EAAoB1C,EAApB0C,cACpC,OAAKA,EAGEpB,IAAMqB,cAAcC,+UAApBC,CAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,4ECFLC,EAAUrD,OAAAsD,EAAA,EAAAtD,CAAOuD,IAAP,CAAArC,OAAA,aAAAlB,CAAH,CAAAS,KAAA,UAAAJ,OAAA,2qBAkFEmD,IA3CA,kBACbxD,OAAAyD,EAAA,EAAAzD,CAAA,UACEW,IAAGL,GAYHN,OAAAyD,EAAA,EAAAzD,CAACqD,EAAD,CACEK,GAAG,IACHC,WAAW,OACXhD,IAAGC,GAHL,QAWAZ,OAAAyD,EAAA,EAAAzD,CAAA,OACEW,IAAGjB,GAIHM,OAAAyD,EAAA,EAAAzD,CAACqD,EAAD,CAASK,GAAG,IAAIE,gBAAgB,gBAAhC,QAGA5D,OAAAyD,EAAA,EAAAzD,CAACqD,EAAD,CAASK,GAAG,UAAUE,gBAAgB,gBAAtC,SAGA5D,OAAAyD,EAAA,EAAAzD,CAACqD,EAAD,CAASK,GAAG,YAAYE,gBAAgB,gBAAxC,6FCzEAC,EAAU7D,OAAAsD,EAAA,EAAAtD,CAAO,MAAP,CAAAkB,OAAA,YAAAlB,CAAH,CAAAS,KAAA,UAAAJ,OAAA,6KAgBPyD,EAAa9D,OAAAsD,EAAA,EAAAtD,CAAOuD,IAAP,CAAArC,OAAA,YAAAlB,CAAH,CAAAS,KAAA,UAAAJ,OAAA,sMA6BD0D,IAnBA,kBACX/D,OAAAyD,EAAA,EAAAzD,CAAA,UAAQW,IAAGL,GASPN,OAAAyD,EAAA,EAAAzD,CAAC6D,EAAD,KACKtC,cAAWgB,IAAI,SAAAC,GAAI,OAClBxC,OAAAyD,EAAA,EAAAzD,CAAC8D,EAAD,CAAYJ,GAAI,IAAMlB,EAAKG,KAAMiB,gBAAgB,gBAAgBpB,EAAK1C,UAG5EE,OAAAyD,EAAA,EAAAzD,CAAA,y7IC/BOH,IAfS,WAYtB,OAXUmE,EAAA5B,KAWE6B,KAAKC","file":"component---src-pages-index-js-39d7e3ddc4c69a20294c.js","sourcesContent":["import React from 'react';\r\nimport { Global, css } from '@emotion/core';\r\nimport Helmet from 'react-helmet';\r\nimport Header from './header';\r\nimport Footer from './footer';\r\nimport useSiteMetadata from '../hooks/use-sitemetadata';\r\nimport Fade from 'react-reveal/Fade';\r\n// import Lato from 'typeface-lato';\r\n\r\nconst Layout = ({ children }) => {\r\n  const { title, description } = useSiteMetadata();\r\n\r\n  return (\r\n    <>\r\n      <Global\r\n        styles={css`\r\n          * {\r\n            box-sizing: border-box;\r\n            margin: 0;\r\n          }\r\n\r\n          /* More info: https://bit.ly/2PsCnzk */\r\n          /* * + * {\r\n            margin-top: 1rem;\r\n          } */\r\n\r\n          html {\r\n            margin-left: calc(100vw - 100%);\r\n            margin-right: 0;\r\n          }\r\n\r\n          html,\r\n          body {\r\n            \r\n            background-color: white;\r\n            /* margin: 0; */\r\n            color: black;\r\n            /* font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\r\n              Helvetica, Arial, sans-serif, 'Apple Color Emoji',\r\n              'Segoe UI Emoji', 'Segoe UI Symbol'; */\r\n            font-family: 'Lato';\r\n            font-size: 18px;\r\n            line-height: 1.4;\r\n\r\n            /* remove margin for the main div that Gatsby mounts into */\r\n            > div {\r\n              margin-top: 0;\r\n            }\r\n\r\n            @media only screen and (max-width: 900px) {\r\n              margin: 0 2rem;\r\n            }\r\n\r\n            @media only screen and (max-width: 600px) {\r\n              margin: 0 0rem;\r\n            }\r\n          }\r\n\r\n          h1,\r\n          h2,\r\n          h3,\r\n          h4,\r\n          h5,\r\n          h6 {\r\n            color: black;\r\n            line-height: 1.1;\r\n\r\n            + * {\r\n              margin-top: 0.5rem;\r\n            }\r\n          }\r\n\r\n          strong {\r\n            color: black;\r\n          }\r\n\r\n          li {\r\n            margin-top: 0.25rem;\r\n          }\r\n        `}\r\n      />\r\n      <Helmet>\r\n        <html lang=\"en\" />\r\n        <title>{title}</title>\r\n        <meta name=\"description\" content={description} />\r\n      </Helmet>\r\n      <main\r\n        css={css`\r\n          display: flex;\r\n          flex-direction: column;\r\n          margin: 2rem auto;\r\n          max-width: 900px;\r\n        `}\r\n      >\r\n        <Fade bottom distance={'3rem'}>\r\n          {children}\r\n        </Fade>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\n// import { Link, graphql, useStaticQuery } from 'gatsby';\r\n\r\nconst TextBox = styled('div')`\r\n  display: flex;\r\n  margin: 0 auto;\r\n  flex-direction: column;\r\n  height: 65vh;\r\n  justify-content: center;\r\n  //align-items: center;\r\n  /* padding: 0 calc((100vw - 550px) / 2) 2rem; */\r\n  width: 80%;\r\n  margin-bottom: 4rem;\r\n\r\n  h1 {\r\n    color: #515151;\r\n    font-size: 2.25rem;\r\n    font-weight: 900;\r\n    /* margin-bottom: 1rem; */\r\n  }\r\n\r\n  p,\r\n  a {\r\n    color: #515151;\r\n    font-size: 1.25rem;\r\n    font-weight: 300;\r\n    /* margin-top: rem; */\r\n  }\r\n\r\n  h2, a {\r\n    margin: 1rem auto 0 0;\r\n    text-decoration: none;\r\n    font-size: 1.25rem;\r\n    font-weight: 900;\r\n  }\r\n\r\n  .highlight {\r\n    color: #0073ff;\r\n    transition: .2s;\r\n\r\n    &:hover {\r\n      color: rgb(35,111,205);\r\n    }\r\n  }\r\n\r\n  .subtitle {\r\n    font-size: 1rem;\r\n\r\n    a {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n\r\n  .contact-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-top: 1.5rem;\r\n  }\r\n\r\n  .contact {\r\n    /* margin-right: 2rem; */\r\n    width: 10rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-content: center;\r\n    justify-content: center;\r\n    transition: .2s;\r\n\r\n    &:hover {\r\n      color: #3a98c3;\r\n    }\r\n  }\r\n  \r\n`;\r\n\r\nconst Hero = () => {\r\n  return (\r\n    <TextBox>\r\n      <h1>Alec Diaz</h1>\r\n      <p>ux designer + developer</p>\r\n      <h2>My website has moved to <a className={\"highlight\"} href=\"https://alecdiaz.dev\">alecdiaz.dev</a></h2>\r\n    </TextBox>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Layout from '../components/layout';\r\nimport usePosts from '../hooks/use-posts';\r\nimport Hero from '../components/hero';\r\nimport PostPreview from '../components/post-preview';\r\n\r\n\r\nexport default () => {\r\n  const posts = usePosts();\r\n\r\n  const ItemContainer = styled('div')`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    @media only screen and (max-width: 600px) {\r\n      flex-direction: column;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Hero/>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { graphql, useStaticQuery } from 'gatsby';\r\n\r\nconst usePosts = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allMdx {\r\n        nodes {\r\n          frontmatter {\r\n            title\r\n            tag\r\n            slug\r\n            image {\r\n              sharp: childImageSharp {\r\n                fluid(\r\n                  maxWidth: 600\r\n                  maxHeight: 600\r\n                ) {\r\n                  ...GatsbyImageSharpFluid_withWebp\r\n                }\r\n              }\r\n            }\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return data.allMdx.nodes.map(post => ({\r\n    title: post.frontmatter.title,\r\n    tag: post.frontmatter.tag,\r\n    slug: post.frontmatter.slug,\r\n    image: post.frontmatter.image,\r\n    excerpt: post.excerpt,\r\n  }));\r\n};\r\n\r\nexport default usePosts;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\nimport { Link } from 'gatsby';\r\n\r\nconst NavLink = styled(Link)`\r\n  color: black;\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  /* font-weight: ${props => props.fontWeight || 'normal'}; */\r\n  line-height: 1;\r\n  margin: 0 0.5rem 0 0;\r\n  padding: 0.25rem;\r\n  text-decoration: none;\r\n  transition: .2s;\r\n  position: relative;\r\n\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n\r\n  &.current-page {\r\n    border-bottom: 2px solid #3a98c3;\r\n  }\r\n\r\n  &:after {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    margin: -.1rem auto;\r\n    width: 0%;\r\n    content: '.';\r\n    color: transparent;\r\n    background: #3a98c3;\r\n    height: 2px;\r\n    transition: .2s;\r\n  }\r\n\r\n  &:hover:after {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Header = () => (\r\n  <header\r\n    css={css`\r\n      background: white;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin: 2rem auto;\r\n      max-width: 900px;\r\n\r\n      @media only screen and (max-width: 900px) {\r\n        margin: 2rem 2rem;\r\n      }\r\n    `}\r\n  >\r\n    <NavLink\r\n      to=\"/\"\r\n      fontWeight=\"bold\"\r\n      css={css`\r\n        :hover:after {\r\n          width: 0%;\r\n        }\r\n      `}\r\n    >\r\n      Logo\r\n    </NavLink>\r\n    <nav\r\n      css={css`\r\n        margin-top: 0;\r\n      `}\r\n    >\r\n      <NavLink to=\"/\" activeClassName=\"current-page\">\r\n        Work\r\n      </NavLink>\r\n      <NavLink to=\"/about/\" activeClassName=\"current-page\">\r\n        About\r\n      </NavLink>\r\n      <NavLink to=\"/contact/\" activeClassName=\"current-page\">\r\n        Contact\r\n      </NavLink>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport usePosts from '../hooks/use-posts';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\nimport { Link } from 'gatsby';\r\n\r\n\r\nconst LinkBox = styled('div')`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    width: 100%;\r\n    margin-bottom: 2rem;\r\n    \r\n    a {\r\n        color: #515151;\r\n        font-weight: 500;\r\n        margin: 0 1rem;\r\n        text-decoration: none;\r\n        transition: .2s;\r\n    }\r\n`\r\n\r\nconst FooterLink = styled(Link)`\r\n    &:hover {\r\n        color: #3a98c3;\r\n    }\r\n\r\n    &.current-page {\r\n        color: #3a98c3;\r\n  }\r\n`\r\n\r\nconst Footer = () => (\r\n    <footer css={css`\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-bottom: 2rem;\r\n        font-weight: 300;\r\n    `}\r\n    >\r\n        <LinkBox>\r\n            {usePosts().map(post => (\r\n              <FooterLink to={\"/\" + post.slug} activeClassName=\"current-page\">{post.title}</FooterLink>\r\n            ))}\r\n        </LinkBox>\r\n        <p>Made with &#10084; by Alec Diaz</p>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import { useStaticQuery, graphql } from 'gatsby';\r\n\r\nconst useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return data.site.siteMetadata;\r\n};\r\n\r\nexport default useSiteMetadata;\r\n"],"sourceRoot":""}